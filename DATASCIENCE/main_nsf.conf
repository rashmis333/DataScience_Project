input {
	file {
		path => "C:/logstash/2022/*.xml"
		start_position => "beginning"
		#sincedb_path => "C:/Software/logstash-7.12.1/sincedb"
		sincedb_path => "\nul"
		type => "xml"
		close_older => 60
		max_open_files => 102400
		codec => multiline {
			# This filter takes every line that does not match an empty line (i.e., it takes every line) and combines them into one event. The auto_flush_interval is required because otherwise it will wait forever to find an empty line.
			pattern => "<?xml version"
			negate => true
			what => "previous"
			auto_flush_interval => 2
		}
	}
}

filter {

	xml {
		source => "message"
		target => "rootTag"
		store_xml => false
		xpath => [
			"/rootTag/Award/AwardTitle/text()", "message_title",
			"/rootTag/Award/AGENCY/text()", "entity_awarding_agency_name",
			"/rootTag/Award/AwardEffectiveDate/text()", "time_relationship_start",
			"/rootTag/Award/AwardExpirationDate/text()", "time_relationship_end",
			"/rootTag/Award/AwardTotalIntnAmount/text()", "message_potential_total_value_of_award",
			"/rootTag/Award/AwardAmount/text()", "message_current_total_award_value",
			"/rootTag/Award/AwardInstrument/Value/text()", "relationship_details",
			"/rootTag/Award/Organization/Code/text()", "entity_awarding_sub_agency_code",
			"/rootTag/Award/Organization/Directorate/Abbreviation/text()", "entity_awarding_office_code",
			"/rootTag/Award/Organization/Directorate/LongName/text()", "entity_awarding_office_name",
			"/rootTag/Award/Organization/Division/LongName/text()", "entity_awarding_sub_agency_name",
			"/rootTag/Award/ProgramOfficer/SignBlockName/text()", "[entity_officer][name]",
			"/rootTag/Award/ProgramOfficer/PO_EMAI/text()", "[entity_officer][email]",
			"/rootTag/Award/ProgramOfficer/PO_PHON/text()", "[entity_officer][phone]",
			"/rootTag/Award/AbstractNarration/text()", "message_body",
			"/rootTag/Award/MinAmdLetterDate/text()", "time_filing_period_start",
			"/rootTag/Award/MaxAmdLetterDate/text()", "time_filing_period_end",
			"/rootTag/Award/ARRAAmount/text()", "contract_award_arra_value",
			"/rootTag/Award/TRAN_TYPE/text()", "entity_type",
			"/rootTag/Award/CFDA_NUM/text()", "doc_cfda_id",
			"/rootTag/Award/FUND_AGCY_CODE/text()", "entity_funding_agency_code",
			"/rootTag/Award/AWDG_AGCY_CODE/text()", "entity_awarding_agency_code",
			"/rootTag/Award/AwardID/text()", "entity_parent_award_id_piid",
			"/rootTag/Award/Institution/Name/text()", "entity_full_name",
			"/rootTag/Award/Institution/CityName/text()", "entity_city",
			"/rootTag/Award/Institution/ZipCode/text()", "entity_zip_code",
			"/rootTag/Award/Institution/PhoneNumber/text()", "entity_phone",
			"/rootTag/Award/Institution/StreetAddress/text()", "entity_street_address1",
			"/rootTag/Award/Institution/StreetAddress2/text()", "entity_street_address2",
			"/rootTag/Award/Institution/CountryName/text()", "entity_country",
			"/rootTag/Award/Institution/StateName/text()", "entity_state",
			"/rootTag/Award/Institution/StateCode/text()", "entity_state_code",
			"/rootTag/Award/Institution/CONGRESS_DISTRICT_ORG/text()", "entity_congressional_district",
			"/rootTag/Award/Institution/ORG_DUNS_NUM/text()", "entity_duns",
			"/rootTag/Award/Institution/ORG_LGL_BUS_NAME/text()", "entity_alias",
			"/rootTag/Award/Institution/ORG_PRNT_DUNS_NUM/text()", "entity_parent_duns",
			"/rootTag/Award/Performance_Institution/Name/text()", "entity_primary_pop_name",
			"/rootTag/Award/Performance_Institution/CityName/text()", "entity_primary_pop_city",
			"/rootTag/Award/Performance_Institution/StateCode/text()", "entity_primary_pop_state_code",
			"/rootTag/Award/Performance_Institution/ZipCode/text()", "entity_primary_pop_zip_code",
			"/rootTag/Award/Performance_Institution/StreetAddress/text()", "entity_primary_pop_address",
			"/rootTag/Award/Performance_Institution/CountryCode/text()", "entity_primary_pop_country_code",
			"/rootTag/Award/Performance_Institution/CountryName/text()", "entity_primary_pop_country",
			"/rootTag/Award/Performance_Institution/CONGRESSDISTRICT/text()", "entity_primary_pop_congressional_district",
			"/rootTag/Award/ProgramElement/Code/text()", "contract_research_code",
			"/rootTag/Award/ProgramElement/Text/text()", "contract_research_type",
			"/rootTag/Award/FUND_OBLG/text()", "message_total_dollars_obligated_value"
		]
	}

	
	mutate {
              replace => {
                "message_title" =>  "%{[message_title][0]}"
                "entity_awarding_agency_name"  =>  "%{[entity_awarding_agency_name][0]}"
                "time_relationship_start" =>  "%{[time_relationship_start][0]}"
                "time_relationship_end"  =>  "%{[time_relationship_end][0]}" 
                "message_potential_total_value_of_award"  => "%{[message_potential_total_value_of_award][0]}" 
                "message_current_total_award_value" =>  "%{[message_current_total_award_value][0]}"
                "relationship_details"  =>  "%{[relationship_details][0]}"
                "entity_awarding_sub_agency_code" =>  "%{[entity_awarding_sub_agency_code][0]}"
                "entity_awarding_office_code" =>  "%{[entity_awarding_office_code][0]}"
                "entity_awarding_office_name" =>  "%{[entity_awarding_office_name][0]}"
                "entity_awarding_sub_agency_name" =>  "%{[entity_awarding_sub_agency_name][0]}"
                "[entity_officer][name]" => "%{[entity_officer][name][0]}"
                "[entity_officer][email]" =>  "%{[entity_officer][email][0]}"
                "[entity_officer][phone]" =>  "%{[entity_officer][phone][0]}"
                "message_body"  =>  "%{[message_body][0]}"
                "time_filing_period_start"  =>  "%{[time_filing_period_start][0]}"
                "time_filing_period_end"  =>  "%{[time_filing_period_end][0]}"
                "contract_award_arra_value"  =>  "%{[contract_award_arra_value][0]}"
                "entity_type"  =>  "%{[entity_type][0]}"
                "doc_cfda_id"   =>  "%{[doc_cfda_id][0]}"
                "entity_funding_agency_code"   =>  "%{[entity_funding_agency_code][0]}"
                "entity_awarding_agency_code" =>  "%{[entity_awarding_agency_code][0]}"
                "entity_parent_award_id_piid" =>  "%{[entity_parent_award_id_piid][0]}"
                "entity_full_name" =>  "%{[entity_full_name][0]}" 
                "entity_city" => "%{[entity_city][0]}"
                "entity_zip_code" => "%{[entity_zip_code][0]}"
                "entity_phone" => "%{[entity_phone][0]}"
                "entity_street_address1" =>  "%{[entity_street_address1][0]}"
                "entity_street_address2" =>  "%{[entity_street_address2][0]}"
                "entity_country" =>  "%{[entity_country][0]}"
                "entity_state" =>  "%{[entity_state][0]}"
                "entity_state_code" =>  "%{[entity_state_code][0]}"
                "entity_congressional_district" => "%{[entity_congressional_district][0]}"
                "entity_duns" =>  "%{[entity_duns][0]}"
                "entity_alias" => "%{[entity_alias][0]}"
                "entity_parent_duns" => "%{[entity_parent_duns][0]}"
                "entity_primary_pop_name"  => "%{[entity_primary_pop_name][0]}"
                "entity_primary_pop_city" =>  "%{[entity_primary_pop_city][0]}"
                "entity_primary_pop_state_code" =>  "%{[entity_primary_pop_state_code][0]}"
                "entity_primary_pop_zip_code" =>  "%{[entity_primary_pop_zip_code][0]}"
                "entity_primary_pop_address" => "%{[entity_primary_pop_address][0]}"
                "entity_primary_pop_country_code" =>  "%{[entity_primary_pop_country_code][0]}"
                "entity_primary_pop_country"  =>  "%{[entity_primary_pop_country][0]}"
				"entity_primary_pop_congressional_district" =>  "%{[entity_primary_pop_congressional_district][0]}"
                "contract_research_code" => "%{[contract_research_code][0]}"
                "contract_research_type" =>  "%{[contract_research_type][0]}"
                "message_total_dollars_obligated_value" => "%{[message_total_dollars_obligated_value][0]}"
                }
        }

    ruby {
        code => "
            hash = event.to_hash
            hash.each do |k,v|
                if v == nil or v == '' or v.to_s.include? '%{'
                    event.remove(k)
                end
            end
            if not event.get('entity_officer.phone').nil?
                event.set('entity_officer.phone','1'.concat(event.get('entity_officer.phone')))
            end
            if not event.get('entity_phone').nil?
                event.set('entity_phone','1'.concat(event.get('entity_phone')))
            end
            if not event.get('entity_principal_investigator_phone_number').nil?
                event.set('entity_principal_investigator_phone_number','1'.concat(event.get('entity_principal_investigator_phone_number')))
            end
            if event.get('entity_street_address1').nil?
                event.set('entity_address',event.get('entity_street_address2'))
            elsif event.get('entity_street_address2').nil?
                event.set('entity_address',event.get('entity_street_address1'))
            else
                event.set('entity_address',event.get('entity_street_address1').concat('').concat(event.get('entity_street_address2')))
            end
            if not event.get('message_total_dollars_obligated_value').nil?
                event.set('message_total_dollars_obligated_value',event.get('message_total_dollars_obligated_value').to_s.split('~')[1])
            else
                event.set('message_total_dollars_obligated_value','0')
            end
        "
    }

    ruby {
        path => "C:/logstash/remove_cdata.rb"
        script_params => { "fields" => [ "message_title","entity_awarding_agency_name","time_relationship_start","time_relationship_end","message_potential_total_value_of_award","message_current_total_award_value","relationship_details","entity_awarding_sub_agency_code","entity_awarding_office_code","entity_awarding_office_name","entity_awarding_sub_agency_name","[entity_officer][name]","[entity_officer][email]","[entity_officer][phone]","message_body","time_filing_period_start","time_filing_period_end","contract_award_arra_value","entity_type","doc_cfda_id","entity_funding_agency_code","entity_awarding_agency_code","entity_parent_award_id_piid","entity_full_name","entity_city","entity_zip_code","entity_phone","entity_street_address1","entity_street_address2","entity_country","entity_state","entity_state_code","entity_congressional_district","entity_duns","entity_alias","entity_parent_duns","entity_primary_pop_name","entity_primary_pop_city","entity_primary_pop_state_code","entity_primary_pop_zip_code","entity_primary_pop_address","entity_primary_pop_country_code","entity_primary_pop_country","entity_primary_pop_congressional_district","contract_research_code","contract_research_type","message_total_dollars_obligated_value","entity_address" ] }
    }
	if[message_total_dollars_obligated_value]=='0' {
		mutate {
			remove_field => [ "message_total_dollars_obligated_value"]
		}
	}
	
	date {
		match => [ "time_relationship_start", "MM/dd/yyyy" ]
		target => "time_relationship_start"
		timezone => "UTC"
	}
	
	date {
		match => [ "time_relationship_end", "MM/dd/yyyy" ]
		target => "time_relationship_end"
		timezone => "UTC"
	}
	
	date {
		match => [ "time_filing_period_start", "MM/dd/yyyy" ]
		target => "time_filing_period_start"
		timezone => "UTC"
	}

	date {
		match => [ "time_filing_period_end", "MM/dd/yyyy" ]
		target => "time_filing_period_end"
		timezone => "UTC"
	}
	
	
	mutate {
		add_field => {"doc_source" => "NSF"}
		add_field => {"doc_source_type" => "research grant"}
		add_field => { "time_collected" => "12/02/2022"}
		add_field => { "time_updated" => "10/02/2022"}
		add_field => { "time_uploaded" => "%{@timestamp}" }
		add_field => { "relationship_type" => "grant from" }
		add_field => { "target_entity_full_name" => "National Science Foundation" }
		
	}
	
	if[time_relationship_start] {
		mutate {
			add_field => { "time_master" => "%{time_relationship_start}" }
		}
	}
	else if[time_relationship_end] {
		mutate {
			add_field => { "time_master" => "%{time_relationship_end}" }
		}
	}
	else if[time_filing_period_start] {
		mutate {
			add_field => { "time_master" => "%{time_filing_period_start}" }
		}
	}
	else {
		mutate {
			add_field => { "time_master" => "%{time_filing_period_end}" }
		}
	}

	
	mutate {
		remove_field => [ "tags", "message", "path", "host", "@timestamp", "@version", "type", "rootTag", "Award","entity_street_address1","entity_street_address2"]
	}
	
	if [time_collected] {
		date {
			match => [ "time_collected", "dd/MM/YYYY", "yyyy-MM-dd'T'HH:mm:ss" ]
			target => "time_collected"
			timezone => "UTC"
		}
	}
	
	if [time_updated] {
		date {
			match => [ "time_updated", "dd/MM/YYYY", "yyyy-MM-dd'T'HH:mm:ss" ]
			target => "time_updated"
			timezone => "UTC"
		}
	}
	
}

output{
	stdout { codec => rubydebug }
	elasticsearch { 
		index => "main_nsf"
		hosts => ["http://localhost:9200"]
		document_type => "_doc"
		document_id => "%{entity_awarding_sub_agency_code}-%{time_master}-%{entity_parent_award_id_piid}-%{entity_full_name}-%{message_current_total_award_value}-%{time_uploaded}"
	}

	
}